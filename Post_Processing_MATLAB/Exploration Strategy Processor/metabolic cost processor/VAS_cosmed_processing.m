%% 2024-25 Vickrey VAS Study - Determining Metabolic Cost Difference in Speeds
% This code determines the metabolic difference when walking at Leo's
% 1.25m/s speed and a speed generated by the treadmill_buddy.py script
% which attempts to maintain 105 steps/min. 
%
% Conditions for the test were as follows: 3 participants walked with exo
% shoes on (without the device) at both of these speeds. Their weight was
% then taken (with the shoes on).
%
% Script should be run from the:
% Exoboot-Controller-VAS/Post_Processing_MATLAB/Exploration Strategy Processor/metabolic cost directory
% 
% Author: Nundini Rawal
% Date: 9/21/2024

clc; close; clear;

% ask for path to Vickrey subject file tree
fprintf("Select Location of the JND File Tree\n");
title = 'Select Location of the JND File Tree (i.e. all JND subject folders should be viewable';
path = '/Volumes/me-neurobionics/Lab Members/Students/Nundini Rawal/SUBJECT DATA/Vickrey_Data_Analysis/VAS_Protocol_Data/';
VAS_directory_path = uigetdir(path,title);

% ask for path to subject dictionary file tree
fprintf("Select Location of the subject dictionary file\n");
[~,sub_dictionary_file_location] = uigetfile;

% add VAS directory & subject dictionary to path
addpath(genpath(VAS_directory_path))
addpath(genpath(sub_dictionary_file_location))

% loading in subject info from dictionary
[subject, subject_list] = subject_dictionary_VAS;

% specify subj numbers (remove subjects due to any criteria)
subj_num = [4 6 8];

%% Looping thru all subjects, fill in the SS values for each condition 

prompt = "Would you like to visualize VO2 over time? (y/n): \n";
user_select = input(prompt,"s");

if user_select == "n"
    set(0,'DefaultFigureVisible','off');
end

for subj = subj_num
    sub_kg = subject(subj).weight;
    
    % read data from specific cosmed file
    fname_105spm = subject(subj).metabolic_105spm;
    fname_leo_speed = subject(subj).metabolic_leo_speed;
    COSMED_files = [fname_105spm fname_leo_speed];
    
    for file = COSMED_files
        [COSMED_file_data] = readtable(file);
        
        % compute SS_avg using segmenting & IMC functions
        [walking_segments, standing_calib, t_cosmed, VO2] = cutVO2Segments(COSMED_file_data, sub_kg);
        [SS_vals, t_vals] = IMC_fitting(walking_segments, standing_calib, t_cosmed, VO2);
        SS_avg = mean(SS_vals);

        % compute METs & mRMR (multiples-of-resting-metabolic-rate)
        standardized_MET_resting_rate = 3.5/60; % in mL/kg*s FROM mL/kg*min
        MET = mean(walking_segments{1,1}./standardized_MET_resting_rate);   % METs
        
        avgd_standing_rate = mean(standing_calib{1,1});
        mRMR = mean(walking_segments{1,1}./avgd_standing_rate); % mRMR
    
        % fill in leo or 105spm SS avg value for each subject
        pat = ("leo"|"105");  % text searching pattern finds condition
        cond = extract(file, pat);
        switch cond
            case 'leo'
                subject(subj).leo_met = SS_avg; % define another field for the subject with the key word & fill with SS value
                subject(subj).leo_METs = MET;
                subject(subj).all_leo_mRMR = mRMR;
                subject(subj).standing_rate_leo = avgd_standing_rate;
            case '105'
                subject(subj).spm105_met = SS_avg; 
                subject(subj).spm105_METs = MET;
                subject(subj).spm105_mRMR = mRMR;
                subject(subj).standing_rate_105spm = avgd_standing_rate;
        end
    end
end

% turn into an array
all_105spm_datapts = [subject.leo_met];
all_leomet_datapts = [subject.spm105_met];
all_leo_METs = [subject.leo_METs];
all_spm105_METs = [subject.spm105_METs];
all_leo_mRMR = [subject.all_leo_mRMR];
all_spm105_mRMR = [subject.spm105_mRMR];

% Find mean & std for each condition
spm105_SS_avg = mean(all_105spm_datapts);
leomet_SS_avg = mean(all_leomet_datapts);
smp105_METs_avg = mean(all_spm105_METs);
leo_METs_avg = mean(all_leo_METs);

%% Plot the METs (papers used 3.5ml/kg*min) & mRMR:

cats = {'1.25m/s (Leo)', '105 steps/min'};
data = [all_leo_METs; all_spm105_METs];

figure
subplot(2,1,1)
hold on
for trial_type = 1:length(cats)
    met_data = data(trial_type,:);
    avg_MET = mean(met_data);
    sem_MET = std(met_data)/sqrt(length(subj_num));
    errorbar(trial_type, avg_MET, sem_MET, 'o', 'MarkerSize', 16, 'LineWidth', 3, 'color', '#00274C', 'MarkerFaceColor', '#00274C')
    plot(trial_type - 0.1, met_data, 'o', 'MarkerSize', 8, 'Color', '#00274C', 'MarkerFaceColor', '#FFCB05')
end

xticks([1 2])
xticklabels(cats)
xlabel('Speeds')
ylabel('METs');
legend('Nundini', 'John','Varun');
set(gca,'FontSize', 20)
set(gca, 'Color', '#F5F5F5')
hold on

% plot for mRMR
data_mRMR = [all_leo_mRMR; all_spm105_mRMR];

subplot(2,1,2)
hold on
for trial_type = 1:length(cats)
    mRMR_data = data_mRMR(trial_type,:);
    avg_MET = mean(mRMR_data);
    sem_MET = std(mRMR_data)/sqrt(length(subj_num));
    errorbar(trial_type, avg_MET, sem_MET, 'o', 'MarkerSize', 16, 'LineWidth', 3, 'color', '#00274C', 'MarkerFaceColor', '#00274C')
    plot(trial_type - 0.1, mRMR_data, 'o', 'MarkerSize', 8, 'Color', '#00274C', 'MarkerFaceColor', '#FFCB05')
end

xticks([1 2])
xticklabels(cats)
xlabel('Speeds')
ylabel('mRMR');
set(gca,'FontSize', 20)
set(gca, 'Color', '#F5F5F5')



%% Significant Difference in metabolic rate between 105spm vs 1.25m/s speed?

[h,p] = ttest(all_105spm_datapts, all_leomet_datapts)

if h == 0
    fprintf('ttest does not reject the null hypothesis at the significance level of 5%% \n');
    fprintf('null hypothesis = metabolic rate for both speed conditions are equivalent\n');
    fprintf('IN CONCLUSION: metabolic rates ARE NOT significantly different between these 2 conditions\n');
end

%% Significant Difference in METS between 105spm vs 1.25m/s speed?

[h,p] = ttest(all_spm105_METs, all_leo_METs)

if h == 0
    fprintf('ttest does not reject the null hypothesis at the significance level of 5%% \n');
    fprintf('null hypothesis = METs for both speed conditions are equivalent\n');
    fprintf('IN CONCLUSION: METs ARE NOT significantly different between these 2 conditions\n');

end